function [Y,Xf,Af] = myNeuralNetworkFunction(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 01-May-2022 20:24:05.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 3xQ matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-3.72296;-3.18865;-3.14955];
x1_step1.gain = [0.271388832349549;0.317100433634843;0.313456040924821];
x1_step1.ymin = -1;

% Layer 1
b1 = [-2.6629395322255628997;5.2418641784876784939;3.5381543565742843427;5.8340211070534975235;-4.3754706095356805662;9.8684973722914346439;-4.1962686388540522131;-2.9985300190782115948;6.8062229654934958134;-3.9380389684790988447;-0.5046097311113361128;-3.232710190487618096;0.93509019710677909742;1.6253761532253823141;-1.084860985599566563;-0.081727564144036202176;0.26123635079606527531;-2.328028631669091908;-4.7168500240607427187;-4.992929802315029697;1.1224252795616871392;-5.2562979833287544196;-0.18924441385485996081;-1.7992730162299552799;-0.97623240956025847392;4.0974766913616713637;-2.4674531863804891607;-3.6525042891166172865;-6.2584800183446791522;-5.7222404297281252994];
IW1_1 = [-0.16246145749470358721 0.20975109228256430538 -3.3889947221775411634;-4.4035943905069521165 1.7211066302074331524 -2.7593311793183792346;-1.770094826226231266 4.6313638785469271042 2.2853706240543183448;-6.4080352069649499924 -2.4781497328332231511 4.7384323661129119643;5.4617164168016145709 3.8673802354281279214 1.2186829900592563991;-13.148944203051573965 5.104340713723002132 3.6731277243532312049;5.5777058896728268778 6.3538943871887880732 -0.45783165563307881563;0.1551068256432938941 5.1885125572954153839 -0.075689012242942471653;-10.148312121186036094 2.8868236958825588268 1.5638468466823864933;-3.6267508927140323927 3.8701281860098619703 0.39351379910770467596;0.096961219922265431959 3.2140637769195543605 -5.6853603657963365237;6.2562625187968272655 1.3128773636222785814 5.6270207079370084813;2.1814971214619145456 4.5714575015478269293 -4.0911643040377088099;0.44551416510960384354 -11.282333775199207437 -1.9855839015269600711;5.1418004744772805026 -0.85282700196273664162 2.4010686330221440166;3.5872440007972765663 1.0766271520309975696 2.3607013274392976143;-2.8830917542224940853 -2.4763028285899273406 -0.72000759384558077336;1.4149408326705499306 -0.085083847066723908292 4.9106645714030427996;0.13349897677965336107 -9.6588375415953287018 -2.8045196587165910351;1.3971889883704937674 -5.9410385850454474621 1.3998369665852008481;-1.040552268690047244 5.034404117612074181 -6.0467267887584101871;1.4590255633246063116 -5.6187592685103027179 -0.51409731907328093392;-4.031376987301340975 -0.76455519408000072179 -2.6507601265551103964;3.0048663852807804275 0.93866667467303788186 5.2797074852887790897;-3.1788891444094358185 -0.19513852596000660911 -5.5789787600768541154;1.8920513331432553539 -4.2373522586709526649 -9.908647135457977484;-2.0453550190876801373 -2.6610237246029551095 -0.79808365114509871585;3.1812105331879578785 -1.3881843600355154855 3.8600329118755829505;-4.8897843790778736661 0.67915246906437409802 7.7575187645881733545;1.4169995418200416193 -2.9856606597813581949 2.1234048182719744702];

% Layer 2
b2 = -0.99363279363139456191;
LW2_1 = [-0.74535580001075474321 1.7104320887618960079 0.70317494126479396233 -0.21578055919944472141 2.210680426802126064 0.74710663896872919754 0.26338578499160814061 -0.25574656138855106358 -1.1432726132519230866 -0.23425839471911535927 -0.099417358923126586401 -0.59756765339379802615 0.15449145372617237304 0.078885363112004891484 0.73589421934912524481 -4.7767984894523740635 -1.1498376546177553337 -0.66856324278675216544 0.44471846967912898041 -1.0157828362433451996 -0.20414999696875252289 1.0107524384031967291 -2.9381886618806989375 1.0944705327714481236 -0.14959368967866168432 0.042558466758782921568 -4.8707652246163970489 2.1529940314638702503 0.079210879175567794341 2.0780405675185726899];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0235714035168697;
y1_step1.xoffset = -46.2893467388983;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
