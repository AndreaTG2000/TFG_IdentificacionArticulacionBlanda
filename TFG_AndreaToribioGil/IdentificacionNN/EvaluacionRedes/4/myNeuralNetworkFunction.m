function [Y,Xf,Af] = myNeuralNetworkFunction(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 01-May-2022 19:48:52.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 3xQ matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-3.82866;-5.29313;-5.14052];
x1_step1.gain = [0.258315165166717;0.192781118246155;0.19304218068169];
x1_step1.ymin = -1;

% Layer 1
b1 = [-6.1879743576628722934;-9.9144151007972620704;0.34775565432201666072;-4.9477535741680567227;-0.98589712094386694474;5.0387872619364815208;10.455140398806937796;1.2813611347523259365;4.958714831454994254;-1.3134702451505424481;-2.2570494921426731416;1.5484027655135355062;-0.041054900720084420984;0.18254503261006502224;0.56655873083969976456;1.1111437410682707405;0.16179401747178545623;4.2159203838235281836;-2.6521281883427301196;1.5486924016425132056;-0.63009008271712474425;0.49360060496628616056;-4.8371557193092939997;0.44015879541238289718;-5.4953939660360555663;-11.254542517228774301;-5.7036739121874981961;-7.2492924748051841277;15.176374675083483368;7.0769314997184604721];
IW1_1 = [3.4853779077352382565 1.9227132650685028192 -5.5570001161845796744;10.293320811933046599 -2.6687986525594507015 -1.2303445007851299131;1.3270257585745217632 1.3881714670639109244 7.4596444457691637453;4.4344825235380849193 -5.1334233712958434737 1.4653310229030460654;0.76206930031566588735 2.0469087028142665119 1.5221105372863201755;-4.7333963275140922278 3.6846441203749211724 4.1483681549729300997;-7.129792548323496959 2.6427127590522654366 4.9604236552871974197;-0.89420475902298590665 -2.4929547452085834003 -1.2882765113045517857;-4.4353175877038477637 5.1526783522705628116 -1.3871340528646873835;2.6709452025917959084 -2.6801648533059263535 -0.7113255431311328314;0.021349127687130022013 7.6567787625420002939 0.89373787701283569085;-3.7961580265727596917 2.5598061979304036484 3.5018458216296357577;1.2133425187086590569 8.2927398376629657406 -0.67985221440980347918;1.1815884085388455027 1.2153117713077401518 6.5350972775664857295;-1.3870646519006775144 -1.1707017592382593651 -7.0811411990108359404;0.73522820063569038762 -11.223731599251255631 -1.670348088284102861;-0.44050437383844992523 -5.487521576465918649 1.6174358159553576808;9.7940049955746353305 -16.431904755674523244 3.9203499442026070732;-1.2767157549958969565 2.0808437679723263969 12.581910929241647779;2.6321531076636666135 -7.1545442673586414628 -8.3721649442624990201;-0.45729179707323802662 0.28727454004220126516 1.7970706377338088178;1.4937584077975281094 1.5909779708141520427 8.5166679981146629075;-2.6901736106827773831 12.383664587140557956 -1.8720456145901276379;-0.025857466259486067139 -0.19186076548364069949 0.086254532964447752641;-3.7446431526804264678 2.1776798476961780615 -1.1822336200876744083;-10.067224389887336145 2.1611450260814311086 3.6304320625798767175;-3.8429409646935894784 2.2373108834925763411 -1.1856279932706226266;-14.282081162277247444 12.00818479400397365 9.4042599214157061027;13.38642024795986174 -2.7346379793068869013 -5.2187475394026510145;3.8066678799119362253 -3.8811952989542026771 4.6250091980350180876];

% Layer 2
b2 = -2.5373331048205334248;
LW2_1 = [-0.017610230625029033025 0.024510419960927051775 -6.0987567198344274644 -0.94218626339269351266 -0.63235406459042420302 0.028527691985324094004 0.036272674354717919509 -1.0031001926129075041 -0.94839108435371466399 0.037748742985838898423 0.085635768183990088054 0.042516537211110934369 -0.10117097910706028541 4.6234485095585533543 0.490760395813029493 0.025168334774562952511 -0.15297433894990239422 -0.0099608345919334779356 -0.02176626670388864121 -0.025493893035483418397 -0.25743516319857567831 2.1551128769387846162 -0.02315110459944431584 6.6493503254857548868 1.0553443924240979435 0.073277356128117407397 -1.0022454380858012435 0.011235050635880273681 0.066813773097443698856 0.044719926443814679573];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0158180999187882;
y1_step1.xoffset = -59.2985011470014;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
