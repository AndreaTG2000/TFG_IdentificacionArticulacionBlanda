function [Y,Xf,Af] = myNeuralNetworkFunction(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 06-Jun-2022 23:20:00.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 3xQ matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-3.82866;-5.29313;-5.14052];
x1_step1.gain = [0.258315165166717;0.192781118246155;0.19304218068169];
x1_step1.ymin = -1;

% Layer 1
b1 = [-4.4415837206177659624;-4.1125349038993759265;-3.9783401430052429681;3.4519807492538694405;3.0608079886505885625;-2.2269236274735799697;-3.5887017790331761091;-1.5493032017850758564;2.0737676580080894873;2.4849422994995715719;-0.9452093514808734831;1.6519790099193114585;-0.087750515428198311296;-0.27801443538766179575;-0.22932784956467114346;0.82433643161762870655;0.51042662454612497402;-0.96123091264162330294;-0.84140935145902084891;1.8293722766195119611;1.3815857145424248476;1.9021523302775225073;-1.7426745357917148294;2.5917517416801580943;2.5857304239603915441;3.132540728059726387;3.5024611913213150594;3.4653110030551141918;4.1426653574444545214;-4.3364546381609905268];
IW1_1 = [0.77291088183861578198 -4.0136857381945292289 -0.99145176313479699282;3.5028097464705081343 -2.0718749556310296356 0.69788380492147783496;3.2154890888788481007 -1.7677353940937265975 -0.46749937565257970729;-1.7147372667741989094 -1.8118594248146913106 -3.562237565486942259;-2.4056530348187132873 2.4016714574275574989 -1.9906831688863513286;0.99325070758011302363 -4.4139828530926461525 1.1290878227695804181;1.6695570467803024783 -3.0308926154825415189 0.74056322416825171029;2.9979572931126727831 -2.991145747495048024 -1.140419457172123785;-2.6915876818897523926 -2.2918910966490275705 -2.4989640815385252282;-2.1437624160152779496 2.3033728509021096365 -2.3739511347327497681;2.8234618933630222237 1.3167219005600669934 -2.9319027094819349877;-1.7371953962729123067 2.5203595769511055735 2.007727055245052572;1.7425979762821939278 0.22104078030302962143 3.9813080503113500441;3.6215375347257050542 1.959189523052658588 1.5811847505762544053;-3.2103675719488147244 -1.9115687940175529747 -2.1123165141580573234;-2.5343699763965430449 2.8397044052479629705 1.5837849100351921727;0.34400866061418772235 3.8215381870450402246 1.8177649945541043408;-3.1186625215708336789 -2.3571354599044336275 -1.7978804622076249853;-2.1999180440582075668 2.4525062795046697062 -2.6969929971531736435;3.5245949532799807358 -1.8230663291055446695 0.62602775717970249314;2.4742195931604977766 0.39644696832317788404 -3.3800452847507695964;1.9865011900668492206 -2.8053736787213421344 2.4515167310583492188;-2.14948767873385016 1.6425575467572912647 3.4817282029586631431;3.0216953226783651587 0.81418608654692536941 -2.8288159552446132672;3.1142873270015165588 2.0874692764349900287 -2.2280153782149803021;2.4693014760139360142 -1.2176629090701440727 3.2181802607524341298;2.2801727179487132346 0.088349810412420251571 -3.6152430151969303651;2.8117336263340826363 -3.1894948974730823466 0.67086988021810323168;1.8360482685240806511 -2.9825661082242977962 -2.0437880847387703831;-1.5973038462290523043 -4.0240705833097276667 -0.17142473754873246983];

% Layer 2
b2 = -0.34014839074964714483;
LW2_1 = [-0.077363744393185371329 -0.079189997249145244185 0.30776977929969528969 0.3631157755849727109 -0.19428605688606842561 0.054674813085110858524 -0.11138550982634423669 -0.0171702421064736932 0.73527727806292286772 0.19800517993304006525 0.072432462715809289855 -0.13832067016457150199 -0.074480575189283526605 -0.14298597200548238129 -0.25812581585120347727 -0.010614472082806096845 -0.20947040463109156683 -0.20995833681189804421 -0.031274252517371405047 0.14571044530519791649 -0.079377900409808035964 -0.15645573696685002862 -0.13977863507655730047 0.094333108740966439831 -0.1578634380777363122 -0.20072308886533204997 0.017822399248397281096 0.17841595883992925065 0.25888136516118209762 0.77294103978421946355];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0234961498084224;
y1_step1.xoffset = -46.5611006211289;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
