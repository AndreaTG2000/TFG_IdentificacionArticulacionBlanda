function [Y,Xf,Af] = myNeuralNetworkFunction(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 23-May-2022 13:29:27.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 3xQ matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-3.82866;-5.29313;-5.14052];
x1_step1.gain = [0.258315165166717;0.192781118246155;0.19304218068169];
x1_step1.ymin = -1;

% Layer 1
b1 = [-5.3755943770561023243;-4.5953817408787793752;4.7108883872662712378;-4.9308365861446210587;3.8658545531948793617;0.1863920373069300751;1.5941467882015569746;0.45180863508578245069;1.4622742102726897784;-2.1871688893836727097;-2.6337667618228515209;-0.94643554832379162001;0.094667498473093872335;-0.14769235200479746695;1.1440935356040793369;1.0239901182161144089;0.60252909190533077144;-0.19144819932986339994;1.1766149644626069382;2.4060570098461857569;-1.7197924933806163494;2.548264740775491255;1.782845675978478317;3.1285985507076183865;-1.1688808206762340003;2.0665729748462102755;-2.1990333175102532159;2.7073034312776207422;3.7340600767835026019;-2.6652226947291892678];
IW1_1 = [-2.1487984710723000426 4.0304891582679100992 4.4615965191667754652;4.6100914931301186783 3.3834116649598526827 0.27930152980237610283;-3.454347098537077887 -4.4728604703700938217 2.8122838631023427958;3.7672120582524493138 5.0479245507379584268 -2.718742872662983423;-4.458406958998744507 -3.9026888062164308835 -1.1406816918431639252;0.32675452525712417318 1.2529422541337043029 0.086821709583730755089;2.0180603920559581077 3.4151427364480650972 8.574032463202343024;-0.38132778130738215205 -1.1581127051364861202 0.25979352662271693042;1.6727180241525148041 2.8706209627040562005 7.6475707077371959386;-2.4843939796495142502 0.81233431433222025309 2.2480262008569744658;5.0560775599244163203 -0.96258596082942537997 -2.1568732063954305644;-0.9112652941919907601 -13.544144687867344601 -8.7633604632012271907;1.205943987787332139 -4.6739558190293157836 2.6145302030522898917;0.33325357582857922933 1.0057901080030819951 -0.11384308282620041186;-2.3953540765197973705 -11.799083357899853297 -5.031422740473716182;-1.6200176231099769897 -5.0287070037134045108 -10.515458550674042115;-2.3887219928938723257 -5.01666403219966206 -11.283998348894417774;-4.0470587108023261536 -6.2819177207837633148 7.19721424983768987;7.7222817540835455574 -1.3667671437090138653 1.4574570750277806575;11.164142998516583205 2.6528576625206703454 -0.31064388626436800767;-16.612302617888762057 -10.065427973722968602 -10.663237390080238853;4.7093654858610838332 -2.3272576272447675905 -0.89428710226420127238;2.0184985726130979522 -0.94212887906895992352 -2.1827340841664688575;5.3398313030951829461 -3.3049564466559662179 -1.5484837086232676739;2.2794923069044110697 11.570588344154639771 4.9092132575944100736;3.4691168759989214898 -1.0273107770115981197 -3.004797402935450279;-2.061442257076240292 -1.6593663648561345347 0.10560324658043129809;2.5754678485919755282 0.28718137659024206565 1.5372786519320607024;5.9669024068813980577 -4.3643104650250172938 -2.2912838263060471;-2.0639439337611173997 0.48384171089901306662 -0.65933739314747819016];

% Layer 2
b2 = 0.057021361144673640697;
LW2_1 = [0.1229256205516733591 0.45019356616831818219 -0.54848258101609848048 -0.47476566568085765141 0.49926617664884348491 -4.595070067492151189 0.70515959435019870405 3.1401051755434759016 -0.86342323323063507878 -1.684658103648172256 -0.02167588717224044198 0.0107734102216572869 0.030816043679224015134 7.8514532524403595204 0.97964893258099372542 -0.078796328888270178448 0.092258690879113716687 -0.015239585572281309084 -0.068605545991040323139 0.043933478572112300009 -0.03141859472089055666 2.2877825282632913151 -2.3531994373538505094 -3.486196397157719673 1.0038614126720160069 0.37774482065890957472 -0.40654892765777794761 -1.5234628893328683308 1.4478920983627570074 -2.1270159113339071055];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0234961498084224;
y1_step1.xoffset = -46.5611006211289;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
