function [Y,Xf,Af] = myNeuralNetworkFunction(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 23-May-2022 13:06:43.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 3xQ matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-3.82866;-5.29313;-5.14052];
x1_step1.gain = [0.258315165166717;0.192781118246155;0.19304218068169];
x1_step1.ymin = -1;

% Layer 1
b1 = [2.6883073295915371759;4.8272018538655991904;-3.1279244918794959496;2.3229591488356371443;2.5572637779674844971;2.5145060293986940536;3.088709308065935133;-0.20367997598379511404;2.722173058151571734;-2.866949540438238575;-1.2036417031781221354;-0.097657638210974576087;1.6739386737762951274;-0.26386461640568203979;0.94472122616886866631;-0.88064914606929445284;1.1586827566837401005;0.93106705131373257434;-2.2815548904528171192;2.2391566431362033285;1.5286986383976401971;2.461430956977516793;0.81137995585218369854;2.1508408214436425254;2.5861063451935391022;-2.2342042798047883068;3.5026700787296287665;-2.9330852087362537794;4.3866051826585481521;-4.3544728094709093114];
IW1_1 = [-0.63846286462840362574 -2.1640627484918559809 0.71229675390199109764;0.82670873467945416024 -0.8297503664792230671 6.6844583898196141547;2.5260291655321340798 -2.1367814672174887392 4.4263143865041874037;-2.6311814079070505734 0.82306996248740615929 -2.1107027329092002965;-3.2357375651867603672 -0.46561792285309006045 4.1842873521977645979;-3.1495096098967603204 0.48711143927310734947 -2.7241880030839662474;3.5995442326098725516 -2.124518236003124283 -1.717576048526663568;-1.2216147000249795163 -5.3784753788523733675 -1.8892971605826716086;-5.4335884796013420583 -0.55696240380100403566 4.714971655268518802;5.677057437106369342 0.5467165986395240429 -5.071239330186446459;3.6986737568169569812 5.9835416443904856365 -1.6017968460478808623;-10.070986105317285109 -4.1673941588579710427 -3.2100067454591889593;-7.8381225243955370274 -2.4017519696591844713 5.0301292337317526915;0.68688223304458428942 2.3202898249310073275 6.2339869769736289129;-1.7346353326002166284 -11.694498454424147482 -3.6571751938715832964;5.7240003380629831398 -6.3490546793444275764 -2.3277696257838571547;0.054547302973194024267 -6.60451662940772799 -2.2085253920729197574;3.1409763628684599368 0.53341131875592218137 0.07379209280395290782;-2.7645491042839909213 -4.7914170608494046633 8.0563316368152282365;6.7742862431630310738 1.4611936584068285772 4.3056019950390878037;1.7715563430038134829 2.8727181148735789762 -1.13634641374937706;1.0181443174256359363 2.3313590624191760092 4.5254932570982324691;0.012148640034017523653 -2.5952461119983989413 -6.9592197332317597969;0.72481867009073164265 1.975156691065332426 3.7632609287842733181;9.7003858832932969847 -0.86597659504921342677 2.3652717462807038018;-1.557571426849027274 1.0933760205566471768 0.62716823156306000797;3.1304224519850016861 1.0441699163506172887 3.4842796895497931686;-2.4058588339001980572 1.0273929546708280292 0.64084591812576630065;3.6230197960710923688 3.3756414279828041991 1.1180558706892875787;-1.9737388985072219505 -2.6947189421474737614 -2.7879159157088597709];

% Layer 2
b2 = 1.060324838035384909;
LW2_1 = [0.27256738565584448519 -0.055025560657232998329 0.017963460754359471261 -1.0438045138078948515 -0.088767914704710390583 0.87209452264325504345 0.16997840402861272291 0.1406985080847036329 1.0020156958499033539 0.94140107819356821928 -0.017715151893137607436 0.057761208473202242664 -0.03906237441075788297 -0.22411219776942237214 0.050467065529101545751 0.023228297830122753703 -0.12345515912596750907 0.39108154182782745023 0.014145619489256714904 0.067931065129320705731 -0.05271574882335805512 1.455888571339779336 -0.1200150381839841518 -1.8784350215105234394 0.046718867965702938483 2.1054190859291539439 -0.11508416480794426973 -1.7923958591942021901 -0.87120692692145829117 -0.36302354166048633743];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0234961498084224;
y1_step1.xoffset = -46.5611006211289;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
