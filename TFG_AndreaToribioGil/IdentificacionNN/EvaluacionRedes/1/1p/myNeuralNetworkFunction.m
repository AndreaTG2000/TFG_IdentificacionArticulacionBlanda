function [Y,Xf,Af] = myNeuralNetworkFunction(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 06-Jun-2022 23:36:50.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 3xQ matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-3.82866;-5.29313;-5.14052];
x1_step1.gain = [0.258315165166717;0.192781118246155;0.19304218068169];
x1_step1.ymin = -1;

% Layer 1
b1 = [4.4351119695189487047;4.1042466279729854506;-3.7915081003509518709;3.3098731067795319483;-2.6023557562716943536;2.7599861281171147454;-2.7252683220823699095;-2.4429138524319804482;1.6159528809620606893;1.2669481102651964921;0.40748850463849239922;1.5494636723194386008;-0.86751117187103110595;0.34703902004189252084;0.14192309622080345743;-0.12614816132979897456;-0.12002868682600914552;-0.85183296210976322538;1.4426769703599024997;1.4920883791218044756;-1.7921760228179155483;1.7647539942768137866;2.3109933181219153298;2.7376907182207794733;2.6883922741541113055;3.1788246477537058787;-3.7254635045115898073;-4.1732274206714512488;-4.0892737204473048607;4.6197473285529024878];
IW1_1 = [-2.4298428093225088453 -1.9797879142976044786 2.7879810121199790629;-0.46770084633641417771 2.728120806267639864 -3.2970711347414187742;0.86338807338040013395 1.1463462126397965246 4.0841291063901934422;-2.5767943073445822577 -1.7956309325804511445 3.1072254547334221542;2.7299523945582722106 -3.4200410251640178672 -1.3369820985382721013;-1.2498608072034529393 3.1341245657558731708 -2.7610513520861728054;2.8639218137819151266 2.7533927240039601791 1.4159486270856722623;3.4836837252960268785 -2.1999467283743086021 0.16435324506090448482;-1.1932638347687019031 2.2217520285445315764 3.4815633196959661078;-2.0346847520325925807 2.8905976110153748238 2.7179530348236204951;-3.1424250767036063792 -2.9871179905288047784 0.32146756675773696665;-1.2875669253543724491 3.4481713843004020426 0.53566030707907719144;0.31689946543139940749 -3.1722004650378008428 -2.917774934092742356;-3.9715420798775555866 -1.0411538335028243107 -1.0605545140966954332;-3.5766830689525610509 2.3557045034917041271 -0.609158547705565101;-1.4446449869705788593 3.8851373791547501035 -1.3175690805647277681;-2.0582891395699478565 2.6668556050043310535 -2.4936434119061563486;-0.6201925950066468074 3.0729387664126135427 2.7144122988020975562;3.4416048938107839383 1.4042740715889634462 1.7398085695582781174;1.6472628538533855558 1.1270534142220582918 3.7362223038121555874;-2.4140004032479929208 -3.4371333185410462008 0.82097091705787794691;3.4168844918778824571 2.4186647809786556707 -1.0835845939567849694;1.2068382052038744146 -1.1551380352244708938 3.8108159144075925973;1.454290937012122642 -3.7395822334435302459 1.201032912230415528;0.11946993622871850127 3.1614146748136047194 3.0821357904684316686;2.03734967567675751 0.93619007444934643214 -3.7135017528647189522;-2.1378069262169270282 -3.4994260527514198245 0.74877232504145885272;-1.2516471028059121817 2.5958267384549147394 -2.6107196786354469609;-2.96115365639598771 -2.9984345967850183357 -0.97193890125700022065;1.3251335800556944822 -2.7079599542174923599 2.7436263549796753303];

% Layer 2
b2 = 0.35307179744372613195;
LW2_1 = [0.03816938100359119207 -0.014302490148857949573 -0.24500605567690625364 -0.010195643948046851854 0.23109637296499352388 0.00062049968883896942234 0.024291249760554283615 -0.30203519042911930459 -0.097482537267736354969 -0.04278022833376131373 -0.15883505568373804118 -0.28036013538802195821 -0.13650966257399180237 0.084408133019370057415 -0.0037936743395184215413 -0.34169680669335517065 0.25413265820890890145 -0.13129679888909656649 0.38411698620512285673 -0.16927156017074548866 0.10492151055862071474 0.086104291158265150452 -0.038999059793327572887 0.02490986288515972466 -0.29557320686314192404 0.063207262168601480168 0.00065329962610482887869 -0.24769195538521873723 0.30295067238994172198 -0.18209299407989804065];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0234961498084224;
y1_step1.xoffset = -46.5611006211289;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
