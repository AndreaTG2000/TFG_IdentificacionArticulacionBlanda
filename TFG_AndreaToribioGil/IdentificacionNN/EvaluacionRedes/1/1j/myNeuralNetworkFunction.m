function [Y,Xf,Af] = myNeuralNetworkFunction(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 06-Jun-2022 22:49:05.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 3xQ matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-3.82866;-5.29313;-5.14052];
x1_step1.gain = [0.258315165166717;0.192781118246155;0.19304218068169];
x1_step1.ymin = -1;

% Layer 1
b1 = [-0.58641373986851852429;0.63452108780219762529;0.62556093208476615253;0.66701226589492235153;-0.53576496078006485835;-0.013578074070683721769;-0.19720607493804503951;0.0085720336205028016541;-1.2557390790505800204;-0.63447226257528832605;0.2472279581279892835;0.3605414110119909421;-0.10204676409844916363;-0.65916670572018609686;-0.15155681514873151072;0.84685614177091828036;0.87286943430693975099;0.43866172001778847012;-0.2127254013443240499;-0.71460636226853091468;-0.22595753374519172985;1.3881816570915463949;-0.17808111829243264412;-1.799233353517223799;-1.4210586366100024236;-0.76817974464595129014;-0.46035821250688147011;0.94912401449460748193;-0.5083703242201550454;-0.26251619669235104482];
IW1_1 = [1.369916078781764357 -0.26512475091567083707 -0.81398859718935745455;5.4970306056826547803 -2.144175443720576002 -0.61436921537298472273;5.3181394384491573746 -2.3777867470672604533 -0.86592987146486766203;0.21217886607997016313 2.291025781898537339 0.1789287687461766363;0.97357162269769215168 3.5081537613584776736 8.1208277408410420861;-0.082206482119831211786 -0.059504717332821567555 -0.25054281505126907437;0.0038290633526634381203 -0.14785089656563105143 -1.0142654674806490522;-0.041012367769907687176 -0.043919938930111999953 -0.19965749760959336512;-9.6813883932277384758 -3.4957720829608196489 -4.1424796049832606215;0.66926021987178607731 -0.82025019261441645124 -1.7117470762053401678;0.13109168427927395117 -6.0204206936176571929 -1.7107032414573939416;-0.081492124451600062018 -0.24357679222587524936 0.21845915066227378221;-0.14483225411686753703 -0.058094691904508014013 -0.32188156619799557223;-9.040634061633896934 -1.0242210134127944787 1.644397101633958469;-2.183975770618241885 -4.0828302025648453011 8.1924717686500656555;-0.60900683873758265641 -10.549784974585927344 -2.4718552859179796499;0.038442753890172834397 6.3008392728517250703 1.7704212943985315754;-1.985798159623417769 -0.44807571081385177969 -0.18432994971192565026;-0.031741542018329745034 0.17666020093747134001 -0.20914583862234278899;0.72964852812065594811 0.14108491697647912444 -0.078763976013258699127;-1.06259724898919794 6.6172305520343233098 -2.6940533100102146413;-0.010028155386666166501 -0.33639751118028193844 -3.1685514876004381435;-1.3846546296480086724 -0.3708433735816339949 -0.37760548809514193902;0.36373545820230918091 -0.96246413166562438946 -0.61534393913586193925;0.011961581342366422315 0.22288767990084473736 3.1722529424465282233;-0.4776763973773055505 3.7568025664758746274 0.72862187283582213748;-0.34138690145962652389 3.6878941777876170782 0.85326559893464481998;0.24740409277008681976 -0.648588451853160608 1.8805249934772825249;1.2241513000736776728 3.8285296876491794471 8.675626965974219118;-0.22096815192615545942 -0.051179918934442784895 -0.38032567328990007915];

% Layer 2
b2 = 0.3321711799514153185;
LW2_1 = [1.7415440359917768731 -1.9137478041335547196 1.8194710306708439251 -0.33372827447652830823 0.97412729476558224118 -0.33707292605262068053 2.3881606393941141597 -0.2654010769096460387 -0.10519098142266099238 -1.0936597698539347601 0.48454080545187350193 0.34920851949112774459 -0.44470327619379906858 0.045656315269176982186 -0.014556190007574791589 0.048644330218647717501 -0.13254099255521378797 1.5324581739776754752 -0.33311462869883534665 -0.69084626628228262835 -0.019355182740587249801 -1.3636262865706598735 -1.4567459792620300885 0.82732423292624313049 -1.1776290810765628336 -1.1342448703569047996 1.8859592881853042279 0.11062041922976813269 -0.89125766249033810951 -0.53343977329651914854];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0234961498084224;
y1_step1.xoffset = -46.5611006211289;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
