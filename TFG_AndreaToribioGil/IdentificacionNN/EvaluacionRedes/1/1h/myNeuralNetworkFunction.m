function [Y,Xf,Af] = myNeuralNetworkFunction(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 06-Jun-2022 21:49:07.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 3xQ matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-3.82866;-5.29313;-5.14052];
x1_step1.gain = [0.258315165166717;0.192781118246155;0.19304218068169];
x1_step1.ymin = -1;

% Layer 1
b1 = [-0.59433714109980928519;-0.97897962587884046481;-1.3930549349012109062;-0.79657458110957002351;-0.44044578453534705131;0.075055378803872779825;-0.44377874922543586456;-2.1121005401461605544;1.0675028967225086429;2.0329146798445272282;3.5472875326712638433;-0.25237285255947605744;1.1730283566687282892;0.62995700061588777441;-0.4331959259978140353;1.9565367842772669604;-0.78273317202189407471;2.9431383825986241476;-1.1414964380138459266;2.8717878803267997689;1.2823285267779349628;0.78067321950094425986;0.71460556190172463964;-1.0659681112203287512;-0.43204625727744783159;-2.0343862104560757054;2.401401307434611887;0.53869372503975077038;3.5156621124189872951;1.5967698744844585068];
IW1_1 = [1.53002912361024479 -1.0354032956561116663 0.3418927712629264426;-1.4657535921748390262 1.6576986794839365658 10.691741552031274409;-1.2175940596812613315 5.2261773335386862982 -0.14793931154705486364;-1.4149551296089108998 4.0750011760202466959 -0.92885499601656218438;-3.2190257447018368886 0.99906888738687604778 -1.1883738017426936917;-0.83912486796735064054 1.1922641001943834471 -0.5321247152009501713;0.56107432388685019031 -8.052685993569165035 -0.17911731164182340126;1.6110677257492458381 -4.8729641835353847412 3.8505787396997845917;-0.085386973504599839035 0.15219715343901116245 0.81248022808720987697;-1.6295671628571430922 4.5967839419831948433 -3.8292742468951930235;8.148144284995028741 -1.7872117454377249857 -1.8057790094085652832;3.0092402748043425298 5.650060817411884706 9.8656181564660627714;9.2625289144489286741 -2.2771640055581481299 1.1548919000606345797;0.76784496271566970993 1.5499493486660034236 -0.21198599229000031352;-1.2950747700473237423 -2.9152955252270835729 6.7683100087499230568;0.0035102359570146793137 0.13228048421996152495 1.2580964817884472406;-1.3403058660917592793 5.0328479248665400902 -0.65980936187055316822;6.6210570942209754364 -1.3663427043727762733 -1.4607761084981631949;-2.8206664492780992859 -0.33309918322250009481 0.050474350207694446135;4.7002841958282948198 -1.0529167934172574128 -0.96612697097837441085;0.81512671164801608903 -5.6662971417590553003 -0.52922792712754151978;-0.60579236483885234854 -3.4923701511079734416 -8.6202281205428210598;6.7110457144193453871 0.62467653273835122008 -1.8336829963681755551;-0.77929378995470521829 -1.1964865036446461488 1.3529963588660076645;-1.2774238773874524444 -2.8680611377676070717 6.5355315080757723223;-3.326698704188038036 1.3423179512074887576 0.98413154079615983161;10.592096468457196323 -0.59154352895927775347 -0.15790120806677984677;0.66022300656235910488 1.8068648791768722184 0.27234465221793779932;5.471303933248663931 -0.96404438075917864293 -0.99556990756939856002;2.018740270065852549 1.5227917309403748991 0.83344262070264296671];

% Layer 2
b2 = 0.047338825462247068054;
LW2_1 = [-0.31867593990092690781 -0.037234922982161931804 -1.3207137222903124751 1.8646599399338401604 0.087641182311248524983 -0.71994452266582054101 0.036264235551031601124 0.61054196371971958257 -2.4489706844486671677 0.65093266855800691051 1.3826706778099742134 -0.10618703872113596787 -0.030484667839987981963 1.4123019670424656891 -0.69949053452805354247 1.7401313105251650093 -1.4616934213088785821 -2.0814582629832827365 -0.6542336581562214759 2.6270542967052876726 -1.1348930085563899706 -0.13373149062302372436 -0.062080480115205637082 0.46728033855364775606 0.71373171942900048847 0.82697428437447828564 0.16140487493112459783 -1.3112758451803216975 -1.4628848845674014001 0.31527036675442554614];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0234961498084224;
y1_step1.xoffset = -46.5611006211289;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
