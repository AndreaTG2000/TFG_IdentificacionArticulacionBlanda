function [Y,Xf,Af] = myNeuralNetworkFunction(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 01-May-2022 21:46:20.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 1xQ matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 3xQ matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = -46.2893467388983;
x1_step1.gain = 0.0235714035168697;
x1_step1.ymin = -1;

% Layer 1
b1 = [41.679873934651759271;-38.230885233370834442;36.329640118920274006;-32.5007747218649925;-31.246841070601124812;-27.07745063749631953;-25.552760219952183718;21.039391861332347844;19.431557043031727261;14.058007580049482144;-13.307684302061804971;9.2236818850253214919;8.5554230275516029991;3.6277240764874032486;-1.1657334541990387322;-1.9916135853802390265;3.0444537504735396105;-5.8057716095813693968;-11.012521675480350325;-14.15733200716069895;-15.658270353448557444;-19.204824224724895032;-20.709969908659296323;25.364935415802865037;-27.812575543375274378;-30.496384046692131875;-33.908669963125859681;-36.406877260078033487;-38.635631927918389295;-41.609044016222114237];
IW1_1 = [-42.218725519664616286;42.822166430477878407;-41.919275047783749244;42.694064509086032899;41.474218067609925242;42.217417880978125311;41.50987548899673385;-42.357569590273612903;-41.745011624532040173;-42.518361669534705527;41.875777118981787339;-42.262521079833035742;-41.795260491559524496;-42.071648751258734933;42.000383317127955252;-42.01386286004179027;42.147805642003980608;-42.274331609315943581;-41.726406839254650549;-41.726164955562765613;-42.08075401086416889;-41.937276265263577102;-42.548246135122283818;41.569307860809793453;-41.83059789505410464;-41.860620253909800681;-41.529375862848176837;-41.836251804077022598;-42.47578117566679623;-42.275919488958358272];

% Layer 2
b2 = [-0.41570214199751964745;0.12362591785139942502;-0.13030546743476661975];
LW2_1 = [0.037406328005756411814 0.36353512300511958699 0.39827062853146505406 -0.22926742025319130081 0.3444021673073270895 -0.17665130572403517362 0.17655431577441502156 0.38599974301137734978 -0.4193666544827171494 0.2627700332752797574 0.19235231860818419181 0.13332420202402500697 -0.15698222453812718524 0.23850041226006959971 0.3226385750980959588 0.27241682143179518638 0.20706208019950969601 0.080132395933563888013 -0.0051139541533632495995 -0.1222328167638092461 0.16931112669385386948 -0.079869085152655089344 -0.03856771149072612398 0.23158597907007358319 0.15143697788069801491 0.18752138017727956742 -0.038643800986969345512 -0.24057751013414646613 0.3556967698299458025 -0.55426202976195215744;-0.13529728490123660301 -0.34491471426444036963 -0.25519366448579550166 0.44070509944780555944 -0.61768832598140732681 0.42106391096692907805 -0.28532594875532735212 -0.32373358457002204824 0.41018054978703222258 -0.3861641310224371848 -0.21242123327167991564 0.30895975940569897489 -0.21724306725180148048 -0.051048665259781252079 -0.025073983396819928687 0.38059874688314976332 0.42925269744329086485 0.027154041068767620359 0.13441786987252848928 -0.17673124074243456993 0.0065647523641618396595 0.17219723851736729037 -0.15638847628165863934 0.63843666368619755858 0.64076726957440688359 -0.0069589034542611189621 -0.26846273236574480503 0.34102035405006325686 -0.17127450506700603317 0.23686403989339396836;0.11074492273291308697 0.35283122952848638976 0.26199186135679985998 -0.43122021484417311088 0.60187923252334785129 -0.42095238073780555377 0.28793042609239605234 0.31413494078615689098 -0.39672096110870747054 0.3635311422196415565 0.19553747978424923515 -0.28512096046108564851 0.19139735113113540144 0.050708858238220660963 0.015190693627993174727 -0.38883207942088615638 -0.4291845381421873773 -0.024137293768507830927 -0.13330685275619402752 0.16831907112178579045 0.0044751860253352156171 -0.18036717593890488898 0.16205785667623184843 -0.6548030246367307905 -0.66016551397673539636 0.0017913573109657084104 0.27577078184152614693 -0.34678958877974819242 0.17544278711419292183 -0.25793017223460829035];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [3.94998528630481;0.317100433634843;0.313456040924821];
y1_step1.xoffset = [-0.204557;-3.18865;-3.14955];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
