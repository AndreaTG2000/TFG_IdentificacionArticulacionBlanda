function [Y,Xf,Af] = myNeuralNetworkFunction(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 01-May-2022 21:37:45.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 3xQ matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-3.72296;-1.89645;-2.08756];
x1_step1.gain = [0.271388832349549;0.524753955988886;0.501470562424309];
x1_step1.ymin = -1;

% Layer 1
b1 = [4.4360611334611128598;-3.4556432390708966551;5.5378701534308598653;8.2270664412538998533;-3.4564015144569766314;1.5302089551527642275;-2.8662372600500898301;5.3389204412126556321;0.052590992661881344472;3.5913566095992139893;-0.58946417580748822207;2.0924837397227822322;2.3171574839270170365;0.8952015057857037883;0.11881521678685322274;-2.578381836038295738;0.25991362187283301166;-3.5525462181361655567;-1.9034162439061339533;1.9383077571957993968;-2.4202063504388169335;4.2104889168613244266;-1.9563321550834864571;3.5174755276564155793;3.1574518506305899734;-4.7456223529237737679;4.037410194335256719;-2.9496769548658234861;-5.3629220608454089003;-4.0806821632548393453];
IW1_1 = [-4.8818661209037266246 4.1061286949143944724 -4.4685983266673501291;3.0786803921860563804 -0.3336887545560088264 3.3375976858550067128;-3.9053785836986749658 -0.2285529704124439343 6.1931822675484831109;-5.6187690859820271783 0.10338665354811926722 5.4740533542311622384;3.6312469314555566591 2.1523097172611183048 -1.0532084633924112538;-2.1179571934403731426 -2.5587377776595010559 0.53780720844846297002;3.6346484768739211191 2.1192787553800336298 -2.9753717503079144535;-5.2665380295514534481 5.343936269676234474 -4.8497204094105192951;-0.79824547426029723862 4.367898170210763098 2.0480875275459271556;-4.6876982721255453512 2.7641837581113546385 -4.2884264978900707987;3.1325605950023871493 -0.20639821942480410244 -0.018311244329355273047;-8.4629336120932894261 1.9002078127683612596 -0.1380361000726542664;-2.5608795897863085855 -2.2055751968931192053 -4.9439763946248858062;-9.0364800592979079852 2.8322611645103847877 1.5980933986632950283;-2.9596925625418664119 4.0053064989088991155 0.31484399269105461938;0.3812171496955357175 3.6610423809737744349 -1.0250341888971736815;-0.56265540910877553937 -2.6027399918988010086 -4.8774326958970597445;0.96271655361587982203 -5.2814243480643776607 -4.1152842574891828065;-4.0806749890509843581 2.7156977757462392731 2.0041537081894476025;3.6862559654695394862 1.5532151675962100335 -1.2984511108287426495;4.2180353720743353207 -1.3175713046411350327 -0.99453822636767008625;-0.95768300472826850545 1.6590406485195723363 1.8208823936597644533;1.2788605923907780948 1.8938439068362415973 3.4356669288294048314;2.9042611080751692398 1.5707766325686438602 -1.2000120386253856353;2.4675640492049395469 4.7403000151819911778 -0.20046997328809393335;-4.2277871707020953096 -4.4998254683318625879 -8.6734365210818413772;3.077467806426657404 -3.7255296531469581645 -3.4989922132814825773;-0.94572753348908578097 1.8429043365513042563 -4.244858553027975212;-2.2556083756407248053 3.567072682174817988 2.704087766971085216;-1.7056350392927874804 2.8783762902533993611 2.0496735540469934733];

% Layer 2
b2 = 0.74787653260357989105;
LW2_1 = [-1.6826867804674419116 0.66274243727817849781 -0.53935022266383902956 -0.36188949108702395119 -0.52564707189124992848 -1.07701773835260739 -0.8590734969277571409 0.94401409006330372353 2.2589455303609642378 0.78866838587060672516 -2.7055488020541100802 -0.68416378440989000786 0.7477566110682728473 -0.24804298931444840326 -2.1023287384334281569 -0.26217625846411513058 0.90079894366855861598 -0.11926138460651147799 -0.39460328096372854212 0.11995621340102186059 1.2258217852728370278 -0.58441975356371000938 1.487939861702595179 0.59069305567116892064 0.7766298779795924867 -0.14824905450663020123 0.27362015342832202158 0.86582935473110733682 0.50385184698175000673 -0.99756310113750445989];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0235714035168697;
y1_step1.xoffset = -46.2893467388983;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
